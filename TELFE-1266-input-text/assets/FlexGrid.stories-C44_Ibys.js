import{j as r,a as t,F as m}from"./emotion-react-jsx-runtime.browser.esm-BgDa5HT4.js";import{T as o}from"./Text-DLq4GXsM.js";import{B as p}from"./Button-CP702T-k.js";import"./Drawer-3LJ2T_AH.js";import"./LinkButton-u-U60Uzu.js";import{a as i,b as y}from"./TelicentHorizontalSVG-Ba1YJ692.js";import"./jsx-runtime-DMAvRu52.js";import"./index-Dl6G-zuu.js";import"./Typography-D7Rc9HSx.js";import"./defaultTheme-BpkXhfeA.js";import"./styled-DzpWvPfW.js";import"./generateUtilityClasses-DiXVJdeX.js";import"./DefaultPropsProvider-C67vPJX1.js";import"./ButtonBase-BKsdIIYL.js";import"./TransitionGroupContext-BU5kpZ0L.js";import"./useEnhancedEffect-DZnfS5Iy.js";import"./Button-BRXLRAOR.js";import"./createSvgIcon-DuRnm9w0.js";import"./SvgIcon-CGwi2XF8.js";import"./constants-Tqcu1Fdw.js";import"./iframe-BMn8Mk3f.js";import"../sb-preview/runtime.js";import"./index-B0kOWIl9.js";import"./types-JQgdQoTs.js";import"./useTheme-DHuFs4j8.js";import"./useTheme-D_QPa1U6.js";import"./GlobalStyles-BOcUuy4L.js";import"./GlobalStyles-CIfgeHMT.js";import"./UserProfile-tgHNlyY_.js";import"./UserIcon-kmeEhtTQ.js";import"./index-BfyspvgH.js";import"./FlexBox-BEZBdzr_.js";import"./styled-Ck8GJYy8.js";import"./useThemeProps--JElsblH.js";import"./Popover-DjMyMVBa.js";import"./utils-CzGd2JMT.js";import"./Paper-CjpJL0pm.js";import"./IconButton-DRAdqdZd.js";import"./Menu-DfDRjEgM.js";import"./index-CZM7sGf7.js";import"./Select-llqeadix.js";import"./isMuiElement-DAcuSkv2.js";import"./useId-CkA8naEk.js";import"./DataSetIcon-CPAcG_uv.js";import"./UIThemeProvider-DhG-EHua.js";import"./colorManipulator-B-1-M9MD.js";import"./ThemeProvider-D4yHglI3.js";import"./Chip-BBluW8aP.js";import"./Divider-D_v03hYO.js";import"./Box-Cfx8uO0s.js";import"./TreeView-DroTfa6S.js";import"./UserProfileContent-BtPWIMCF.js";import"./LinearProgress-DzU0Zg_A.js";import"./Container-S5gmVac-.js";import"./Card-DFg-qCLN.js";import"./CardActions-CRS1Zsa7.js";import"./Popover-BCuFO5oU.js";import"./Paper-DV1QHDO7.js";import"./ErrorFallback-Cb7i3evq.js";import"./ErrorFallbackText-D4-31auA.js";import"./ErrorFallbackWrapper-DPNCVGi4.js";import"./MapToggleButtonPresentational-ktAH0RyB.js";import"./List-Dh3f9sEI.js";const Mr={title:"Layout/FlexGrid",component:y,tags:["autodocs"],subcomponents:{FlexGridItem:i},parameters:{layout:"fullscreen"}},s=C=>r(y,{...C}),e=s.bind({});e.args={children:t(m,{children:[t(i,{xs:6,style:{backgroundColor:"#f77",padding:20},children:[r(o,{children:"Left Column"}),r(p,{variant:"contained",color:"primary",children:"Action 1"}),r(o,{children:"More text underneath the button to show stacking."})]}),t(i,{xs:6,style:{backgroundColor:"#77f",padding:20},children:[r(o,{children:"Right Column"}),r(p,{variant:"outlined",color:"secondary",children:"Action 2"}),r(o,{children:"Additional description for context."})]})]})};const a=s.bind({});a.args={direction:"column",children:t(m,{children:[t(i,{xs:12,style:{backgroundColor:"#7f7",padding:20},children:[r(o,{children:"Top Row"}),r(o,{children:"This row can include more detailed elements like forms or charts."})]}),t(i,{xs:12,style:{backgroundColor:"#f77",padding:20},children:[r(o,{children:"Bottom Row"}),r(o,{children:"Even more content here, such as a slider or a progress bar."})]})]})};const n=s.bind({});n.args={children:t(m,{children:[t(i,{xs:8,style:{backgroundColor:"#77f",padding:20},children:[r(o,{children:"Main Content"}),r(o,{children:"Description of the main content area, potentially including large data visualizations."})]}),t(i,{xs:4,style:{backgroundColor:"#7f7",padding:20},children:[r(o,{children:"Sidebar"}),r(o,{children:"Links or additional controls related to the main content could go here."})]})]})};var d,c,l;e.parameters={...e.parameters,docs:{...(d=e.parameters)==null?void 0:d.docs,source:{originalSource:"args => <FlexGrid {...args} />",...(l=(c=e.parameters)==null?void 0:c.docs)==null?void 0:l.source}}};var h,u,g;a.parameters={...a.parameters,docs:{...(h=a.parameters)==null?void 0:h.docs,source:{originalSource:"args => <FlexGrid {...args} />",...(g=(u=a.parameters)==null?void 0:u.docs)==null?void 0:g.source}}};var x,f,b;n.parameters={...n.parameters,docs:{...(x=n.parameters)==null?void 0:x.docs,source:{originalSource:"args => <FlexGrid {...args} />",...(b=(f=n.parameters)==null?void 0:f.docs)==null?void 0:b.source}}};const Sr=["BasicColumns","Rows","MainDetailLayout"];export{e as BasicColumns,n as MainDetailLayout,a as Rows,Sr as __namedExportsOrder,Mr as default};
