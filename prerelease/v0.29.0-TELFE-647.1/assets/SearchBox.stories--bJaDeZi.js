import{f as e,w as n,u as o}from"./index-ZIyp8o0e.js";import{k as s}from"./Drawer-ChvPPhdC.js";import"./emotion-react-jsx-runtime.browser.esm-BgDa5HT4.js";import"./jsx-runtime-DMAvRu52.js";import"./index-Dl6G-zuu.js";import"./createSvgIcon-DiFjgoLh.js";import"./DefaultPropsProvider-DokkfWXe.js";import"./SvgIcon-CwSgo-eM.js";import"./styled-Bh4j-phE.js";import"./generateUtilityClasses-BrZc1hjY.js";import"./constants-Cti-p_rp.js";import"./iframe-DjR5Pwc1.js";import"../sb-preview/runtime.js";import"./index-B0kOWIl9.js";import"./types-JQgdQoTs.js";import"./UserProfile-N6pr5-2m.js";import"./Text-C4zpNQRp.js";import"./Typography-DOS1jQiX.js";import"./UserIcon-Cx-r992D.js";import"./index-BfyspvgH.js";import"./useTheme-Sw6qfmru.js";import"./useTheme-c__JTuJp.js";import"./FlexBox-D2o1BZNO.js";import"./styled-ilcqLD5m.js";import"./useThemeProps-BNFryEOP.js";import"./Popover-jZh0iIOv.js";import"./utils-C-XDAD8M.js";import"./TransitionGroupContext-BU5kpZ0L.js";import"./useEnhancedEffect-DZnfS5Iy.js";import"./Paper-DjaG4Kki.js";import"./IconButton-56B7AwOW.js";import"./ButtonBase-Do7AHI9h.js";import"./index-Bg6tHTX3.js";import"./useId-CkA8naEk.js";import"./TelicentHorizontalSVG-xSzC_QTu.js";import"./FlexGrid-JVYOOaHa.js";import"./Container-bU783VGj.js";import"./Box-B1z1Qd0d.js";import"./DataSetIcon-DGj6m1BG.js";import"./UIThemeProvider-K1iMkQi9.js";import"./colorManipulator-Cuc7me6V.js";import"./ThemeProvider-mIQjSFi-.js";import"./Chip-pzoqvFR6.js";import"./Divider-BQZg7t2N.js";import"./TreeView-gav8i2Kk.js";import"./UserProfileContent-DHz0GTL-.js";import"./LinearProgress-tobgb8oL.js";import"./Button-w9tbBUtr.js";import"./Button-D7yzuVoT.js";import"./SecondaryButton-BcPTyAr_.js";import"./Card-CACrcWJQ.js";import"./CardActions-ChQ-9HT4.js";import"./Popover-DEe1UNyj.js";import"./Paper-BMhFNqQN.js";import"./ErrorFallback-D0Q64ifN.js";import"./ErrorFallbackText-C1J-oAKu.js";import"./ErrorFallbackWrapper-D-KZ366e.js";import"./MapToggleButtonPresentational-CBr8W7gO.js";import"./List-B5LeInEP.js";const gt={title:"Inputs/Search/SearchBox",component:s,tags:["autodocs"],args:{onSearch:e()}},t={args:{placeholder:"Search all"},play:async({canvasElement:i})=>{const r=n(i);await o.type(r.getByRole("searchbox"),"data catalog"),await o.click(r.getByRole("button",{name:"search"}))}};var p,m,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    placeholder: "Search all"
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    await userEvent.type(canvas.getByRole("searchbox"), "data catalog");
    await userEvent.click(canvas.getByRole("button", {
      name: "search"
    }));
  }
}`,...(a=(m=t.parameters)==null?void 0:m.docs)==null?void 0:a.source}}};const yt=["Example"];export{t as Example,yt as __namedExportsOrder,gt as default};
